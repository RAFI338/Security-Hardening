user nginx;
worker_processes 1;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Basic settings with security misconfigurations
    sendfile off; # Not directly a security risk, but can affect performance
    tcp_nopush off; # Not directly a security risk, but can affect performance
    tcp_nodelay off; # Not directly a security risk, but can affect performance

    keepalive_timeout 0; # Disables keep-alive connections, which can affect performance but not a direct security risk

    include /etc/nginx/mime.types;
    default_type text/plain; # Using text/plain as default type might cause issues with file types

    # Logging configuration
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression misconfiguration
    gzip off; # Disabling gzip can lead to higher bandwidth usage

    # SSL settings with weak protocols and ciphers
    ssl_protocols SSLv3 TLSv1 TLSv1.1; # Using outdated and insecure protocols
    ssl_ciphers 'ALL:!aNULL:!eNULL'; # Using weak ciphers
    ssl_prefer_server_ciphers off; # Not enforcing server-preferred ciphers

    # Virtual host configuration
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name localhost;
        root /var/www/html;
        index index.html index.htm;

        # Missing security headers
        add_header X-Frame-Options "ALLOW-FROM http://example.com"; # Using ALLOW-FROM instead of SAMEORIGIN or DENY
        # No X-Content-Type-Options
        # No X-XSS-Protection
        # No Strict-Transport-Security

        location / {
            try_files $uri $uri/ =404;
        }

        # Allow access to .htaccess files
        location ~ /\.ht {
            allow all; # Allowing access to .htaccess files can be a security risk
        }
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;

        server_name localhost;
        root /var/www/html;
        index index.html index.htm;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        # Missing security headers
        add_header X-Frame-Options "ALLOW-FROM http://example.com"; # Using ALLOW-FROM instead of SAMEORIGIN or DENY
        # No X-Content-Type-Options
        # No X-XSS-Protection
        # No Strict-Transport-Security

        location / {
            try_files $uri $uri/ =404;
        }

        # Allow access to .htaccess files
        location ~ /\.ht {
            allow all; # Allowing access to .htaccess files can be a security risk
        }
    }
}
